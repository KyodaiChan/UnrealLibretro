#pragma once

#include "libretro/libretro.h"

#include "InputCoreTypes.h"
#include "CoreMinimal.h"

constexpr int PortCount = 4;
struct FLibretroInputState
{
	unsigned digital[RETRO_DEVICE_ID_JOYPAD_R3 + 1]{};
    int16_t  analog[RETRO_DEVICE_INDEX_ANALOG_RIGHT + 1][RETRO_DEVICE_ID_ANALOG_Y + 1]{};
};

// DO NOT REORDER THESE
UENUM(BlueprintType)
enum  class ERetroInput : uint8
{
	B,
	Y,
	SELECT,
	START,
	UP,
	DOWN,
	LEFT,
	RIGHT,
	A,
	X,
	L,
	R,
	L2,
	R2,
	L3,
	R3,
	LeftX,
    RightX,
	LeftY,
	RightY,
	DisconnectController,

	DigitalCount = LeftX UMETA(Hidden),
	AnalogCount = DisconnectController - DigitalCount UMETA(Hidden)
};

// const for a reason if you make this non-const make sure you don't cause a data race also make it non static too
static const struct { FKey Unreal; retro_key libretro; } key_bindings[] = {
    { EKeys::BackSpace,        RETROK_BACKSPACE    },
    { EKeys::Tab,              RETROK_TAB          },
    { EKeys::Escape,           RETROK_CLEAR        },
    { EKeys::Enter,            RETROK_RETURN       },
    { EKeys::Pause,            RETROK_PAUSE        },
    { EKeys::Escape,           RETROK_ESCAPE       },
    { EKeys::SpaceBar,         RETROK_SPACE        },
    { EKeys::Exclamation,      RETROK_EXCLAIM      },
    { EKeys::Quote,            RETROK_QUOTEDBL     },
//  {                          RETROK_HASH         },
    { EKeys::Dollar,           RETROK_DOLLAR       },
    { EKeys::Ampersand,        RETROK_AMPERSAND    },
    { EKeys::Apostrophe,       RETROK_QUOTE        },
    { EKeys::LeftParantheses,  RETROK_LEFTPAREN    },
    { EKeys::RightParantheses, RETROK_RIGHTPAREN   },
    { EKeys::Asterix,          RETROK_ASTERISK     },
    { EKeys::Add,              RETROK_PLUS         },
    { EKeys::Comma,            RETROK_COMMA        },
    { EKeys::Subtract,         RETROK_MINUS        },
    { EKeys::Period,           RETROK_PERIOD       },
    { EKeys::Slash,            RETROK_SLASH        },
    { EKeys::Zero,             RETROK_0            },
    { EKeys::One,              RETROK_1            },
    { EKeys::Two,              RETROK_2            },
    { EKeys::Three,            RETROK_3            },
    { EKeys::Four,             RETROK_4            },
    { EKeys::Five,             RETROK_5            },
    { EKeys::Six,              RETROK_6            },
    { EKeys::Seven,            RETROK_7            },
    { EKeys::Eight,            RETROK_8            },
    { EKeys::Nine,             RETROK_9            },
    { EKeys::Colon,            RETROK_COLON        },
    { EKeys::Semicolon,        RETROK_SEMICOLON    },
//  {                          RETROK_LESS         },
//  {                          RETROK_EQUALS       },
//  {                          RETROK_GREATER      },
//  {                          RETROK_QUESTION     },
//  {                          RETROK_AT           },
    { EKeys::LeftBracket,      RETROK_LEFTBRACKET  },
    { EKeys::Backslash,        RETROK_BACKSLASH    },
    { EKeys::RightBracket,     RETROK_RIGHTBRACKET },
    { EKeys::Caret,            RETROK_CARET        },
    { EKeys::Underscore,       RETROK_UNDERSCORE   },
    { EKeys::Tilde,            RETROK_BACKQUOTE    }, //@?
    { EKeys::A,                RETROK_a            },
    { EKeys::B,                RETROK_b            },
    { EKeys::C,                RETROK_c            },
    { EKeys::D,                RETROK_d            },
    { EKeys::E,                RETROK_e            },
    { EKeys::F,                RETROK_f            },
    { EKeys::G,                RETROK_g            },
    { EKeys::H,                RETROK_h            },
    { EKeys::I,                RETROK_i            },
    { EKeys::J,                RETROK_j            },
    { EKeys::K,                RETROK_k            },
    { EKeys::L,                RETROK_l            },
    { EKeys::M,                RETROK_m            },
    { EKeys::N,                RETROK_n            },
    { EKeys::O,                RETROK_o            },
    { EKeys::P,                RETROK_p            },
    { EKeys::Q,                RETROK_q            },
    { EKeys::R,                RETROK_r            },
    { EKeys::S,                RETROK_s            },
    { EKeys::T,                RETROK_t            },
    { EKeys::U,                RETROK_u            },
    { EKeys::V,                RETROK_v            },
    { EKeys::W,                RETROK_w            },
    { EKeys::X,                RETROK_x            },
    { EKeys::Y,                RETROK_y            },
    { EKeys::Z,                RETROK_z            },
//  {                          RETROK_LEFTBRACE    },
//  {                          RETROK_BAR          },
//  {                          RETROK_RIGHTBRACE   },
//  {                          RETROK_TILDE        },
    { EKeys::Delete,           RETROK_DELETE       },

    { EKeys::NumPadZero,       RETROK_KP0          },
    { EKeys::NumPadOne,        RETROK_KP1          },
    { EKeys::NumPadTwo,        RETROK_KP2          },
    { EKeys::NumPadThree,      RETROK_KP3          },
    { EKeys::NumPadFour,       RETROK_KP4          },
    { EKeys::NumPadFive,       RETROK_KP5          },
    { EKeys::NumPadSix,        RETROK_KP6          },
    { EKeys::NumPadSeven,      RETROK_KP7          },
    { EKeys::NumPadEight,      RETROK_KP8          },
    { EKeys::NumPadNine,       RETROK_KP9          },
    { EKeys::Decimal,          RETROK_KP_PERIOD    },
    { EKeys::Divide,           RETROK_KP_DIVIDE    },
    { EKeys::Multiply,         RETROK_KP_MULTIPLY  },
    { EKeys::Subtract,         RETROK_KP_MINUS     },
    { EKeys::Add,              RETROK_KP_PLUS      },
//  {                          RETROK_KP_ENTER     },
//  {                          RETROK_KP_EQUALS    },

    { EKeys::Up,               RETROK_UP           },
    { EKeys::Down,             RETROK_DOWN         },
    { EKeys::Right,            RETROK_RIGHT        },
    { EKeys::Left,             RETROK_LEFT         },
//  {                          RETROK_INSERT       },
//  {                          RETROK_HOME         },
//  {                          RETROK_END          },
//  {                          RETROK_PAGEUP       },
//  {                          RETROK_PAGEDOWN     },
//  {                                              },
    { EKeys::F1,               RETROK_F1           },
    { EKeys::F2,               RETROK_F2           },
    { EKeys::F3,               RETROK_F3           },
    { EKeys::F4,               RETROK_F4           },
    { EKeys::F5,               RETROK_F5           },
    { EKeys::F6,               RETROK_F6           },
    { EKeys::F7,               RETROK_F7           },
    { EKeys::F8,               RETROK_F8           },
    { EKeys::F9,               RETROK_F9           },
    { EKeys::F10,              RETROK_F10          },
    { EKeys::F11,              RETROK_F11          },
    { EKeys::F12,              RETROK_F12          },
//  {                          RETROK_F13          },
//  {                          RETROK_F14          },
//  {                          RETROK_F15          },

    { EKeys::NumLock,          RETROK_NUMLOCK      },
    { EKeys::CapsLock,         RETROK_CAPSLOCK     },
    { EKeys::ScrollLock,       RETROK_SCROLLOCK    },

    { EKeys::RightShift,       RETROK_RSHIFT       },
    { EKeys::LeftShift,        RETROK_LSHIFT       },
    { EKeys::RightControl,     RETROK_RCTRL        },
    { EKeys::LeftControl,      RETROK_LCTRL        },
    { EKeys::RightAlt,         RETROK_RALT         },
    { EKeys::LeftAlt,          RETROK_LALT         },
//  {                          RETROK_RMETA        },
//  {                          RETROK_LMETA        },
    { EKeys::LeftCommand,      RETROK_LSUPER       }, //@?
    { EKeys::RightCommand,     RETROK_RSUPER       }, //@?
//  {                          RETROK_MODE         },
//  {                          RETROK_COMPOSE      },

//  {                          RETROK_HELP         },
//  {                          RETROK_PRINT        },
//  {                          RETROK_SYSREQ       },
//  {                          RETROK_BREAK        },
//  {                          RETROK_MENU         },
//  {                          RETROK_POWER        },
//  {                          RETROK_EURO         },
//  {                          RETROK_UNDO         },
//  {                          RETROK_OEM_102      },
};

static const int count_key_bindings = sizeof(key_bindings) / sizeof(key_bindings[0]);